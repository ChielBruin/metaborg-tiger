module dynamic-semantics

imports
  exp
  records
  flowexp
  binexp
  letexp
  callexp
  
signature
  link-labels
    P
    I
  continuations
    ret

  namespaces
    Var
    Field
   
rules
  map[ast -> instr]:: ast -> instr 
  map[x]([]) =
    continue()
    
  map[x]([h|t]) =
    x(h);
    map[x](t)

  exitOK:: -> instr
  exitOK() = 
    rcf <- getCF(curCF(), $ret);
    push(int(0), rcf);
    returnCF(rcf)
    
  resolveVar:: ast -> ast
  resolveVar(name) = resolve(name, "Var")
    
rules
  eval-exp:: ast -> val
  eval:: ast -> instr
  eval(Mod(exp)) =
   val <- eval-exp(exp);
   print(val);
   exitOK()  