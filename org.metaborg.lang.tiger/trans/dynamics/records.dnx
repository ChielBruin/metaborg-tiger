module records

imports common

rules
  eval-exp(Record(_, vals)) =
    rec <- new(int(length(vals)));
    store-field(zip-with-index(vals), rec);
    return(rec)
    
  
  store-field:: ast -> val -> instr
  store-field([], _) = continue()
  
  store-field( [(idx, InitField(name, exp)) | t ], frame ) =
    val <- eval-exp(exp);
    set(frame, [idx], val);
    associate-index(idx, name, "Field");
    store-field(t, frame)
    
  eval-exp(FieldVar(record, slot)) =
    rec <- eval-exp(record);
    s <- new(int(0));
    link(s, rec, &I);
    val <- get(s, resolve(slot, "Field"));
    return(val)
  
  // TODO: This is not a proper NULL
  eval-exp(NilExp()) = return(new(int(0)))
  
  eval-unit-exp(Assign(FieldVar(f, name), exp)) =
    v1 <- eval-exp(exp);
    rec <- eval-exp(f);
    s <- new(int(0));
    link(s, rec, &I);
    set(s, resolve(name, "Field"), v1)
