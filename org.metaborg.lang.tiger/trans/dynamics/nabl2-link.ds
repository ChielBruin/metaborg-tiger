module dynamics/nabl2-link

imports imports ds-signatures/Tiger-sig

imports
  nabl2/runtime/interpreter/util
  nabl2/runtime/interpreter/frame-api
  nabl2/runtime/interpreter/frame-impl
  nabl2/runtime/interpreter/scopegraph-api
  nabl2/runtime/interpreter/scopegraph-impl
  dynamics/natives
  utils

signature
  sort aliases
    Val = V
    Name = Id

  constructors
    __Ty2Type__: Ty -> Type {implicit}
    
  constructors
    __Occurrence2Occ__: Occurrence -> Occ {implicit}
  
  components
    T : TermIndex
    FS: (Frame * Frame)
  
  native operators
    nabl2_bodyScopeOfAST: AST -> Scope
    nabl2_topIndexOf: AST -> TermIndex
    nabl2_phantomIndex: TermIndex -> TermIndex
    
  arrows
    bodyScope(AST) --> Scope

rules

  bodyScope(ast) --> nabl2_bodyScopeOfAST(ast)

/* DEBUGGING HELPERS */

signature 
  sorts PrintWrapper
  constructors
    Decls: List(Occurrence) -> PrintWrapper
    Edges: Map(Label, List(Scope)) -> PrintWrapper
    Imports: Map(Label, List(Occurrence)) -> PrintWrapper
    Links: Map(Label, Map(Scope, Frame)) -> PrintWrapper
    Slots: Map(Occurrence, Val) -> PrintWrapper

  arrows
    printScope(Scope) --> Scope
    printFrame(Frame) --> Frame
    printPath(Path) --> Path
    
rules

  printScope(s) --> s
  where
    printTerm(s) --> _;
    printTerm(Decls(declsOf(s))) --> _;
    printTerm(Edges(edgesOf(s))) --> _;
    printTerm(Imports(importsOf(s))) --> _
  
  printFrame(f) --> f
  where
    printTerm(f) --> _;
    printScope(scopeOf(f)) --> _;
    printTerm(Links(linksOf(f))) --> _;
    printTerm(Slots(slotsOf(f))) --> _
  
  printPath([p]) --> [p]
  where
    printTerm(p) --> _

  printPath([p1 | p2@[_|_]]) --> [p1 | p2]
  where
    printTerm(p1) --> _;
    printPath(p2) --> _
  
//  H h, F f1 |- lookup([E(s, l)|p]) --> Addr(f3, d)
//  where
//    printS("Current frame: ") => _;
//    printTerm(f1) --> _;
//    getScopeOfFirstElem(p) --> s';
//    printS("Next scope: ") => _;
//    printTerm(s') --> _;
//    H h |- linksOf(f1) --> ks;
//    ks[l][s'] => f2;
//    H h, F f2 |- lookup(p) --> Addr(f3, d)
