module dynamics-frames-native/nabl2/frames-native

imports
  dynamics-frames-native/nabl2/scopegraph-native
  dynamics-frames-native/stdlib/native/shared-terms
  
signature
  native datatypes
    "com.oracle.truffle.api.object.DynamicObject" as Frame {}
    
    "org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.FrameLink" as FrameLink {}
    
    "org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.Addr" as Addr {}
    
  components
    F: Frame
  
  native operators
    L           : Label * Frame            -> FrameLink {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.mkFrameLink")}
    scopeOfFrame: Frame                    -> Scope {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.ScopeOfFrame")}
    frame       : Scope * List(FrameLink)  -> Frame {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.NewFrame")}
    framed      : AST   * List(FrameLink)  -> Frame {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.NewFrameFromTermScope")}
    link        : Frame * FrameLink        -> Frame {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.AddFrameLink")}
    clone       : Frame                    -> Frame {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.CloneFrame")}
    same        : Frame * Frame            -> Bool  {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.IdentFrames")}
    lookup      : Frame * Occurrence       -> Addr  {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.Lookup")}
    get         : Frame * Occurrence       -> Val   {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.LookupAndGet")}
    get         : Addr                     -> Val   {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.Get")}
    set         : Frame * Occurrence * Val -> Val   {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.LookupAndSet")}
    set         : Addr * Val               -> Val   {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.Set")}
    

  arrows
    default(Type) --> Val


  