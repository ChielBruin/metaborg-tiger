module dynamics-frames-native/equality

imports ds-signatures/Numbers-sig 
imports dynamics-frames-native/numbers
imports dynamics-frames-native/strings
imports dynamics-frames-native/control-flow
imports dynamics-frames-native/records
imports dynamics-frames-native/natives
imports dynamics-frames-native/arrays

rules

//  Eq(vv1, vv2) --> IntV(i_res)
//  where
//    case (vv1, vv2) of {
//      (IntV(i), IntV(j))         => eqI(i, j) => i_res
//      (StringV(s1), StringV(s2)) => eqS(s1, s2) => i_res
//      (NilV(), NilV())           => 1 => i_res
//      (NilV(), RecordV(_))       => 0 => i_res
//      (RecordV(_), NilV(_))      => 0 => i_res
//      (RecordV(f1), RecordV(f2)) =>
//        case same(f1, f2) of {
//          true                   => 1 => i_res
//          otherwise              => 0 => i_res
//        }
//      (ArrayV(a1), ArrayV(a2)) =>
//        case equals[a1](a2) of {
//          true                   => 1 => i_res
//          otherwise              => 0 => i_res
//        }
//    }


  Eq(vv1, vv2) --> vv
  where
    case vv1 of {
      IntV(i) => 
        case vv2 of {
           IntV(j) => 
             IntV(eqI(i, j)) => vv
        }
      StringV(x) =>
        case vv2 of {
          StringV(y) => 
            IntV(eqS(x, y)) => vv
        }
      NilV() =>
        case vv2 of {
          NilV() => 
            IntV(1) => vv
          RecordV(_) =>
            IntV(0) => vv
        }
      RecordV(f1) =>
        case vv2 of {
          NilV() => 
            IntV(0) => vv
          RecordV(f2) =>
            case same(f1, f2) of {
              true =>
                IntV(1) => vv
              otherwise =>
                IntV(0) => vv    
            }
        }
      ArrayV(a1) =>
        case vv2 of {
          ArrayV(a2) =>
            case equals[a1](a2) of {
              true =>
                IntV(1) => vv
              otherwise =>
                IntV(0) => vv    
            }
          otherwise =>
            IntV(0) => vv
        }    
    }
      
  Neq(e1, e2) --> If(Eq(e1, e2), Int("0"), Int("1"))
  
  And(e1, e2) --> If(e1, e2, Int("0"))
  
  Or(e1, e2) --> If(e1, Int("1"), e2)
  